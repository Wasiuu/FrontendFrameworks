'use client';

import { useState } from "react";
import { updateProfile } from "firebase/auth";
import { auth } from "@/app/lib/firebase/firebase";

export default function ProfileForm() {
    const user = auth.currentUser;
    const [error, setError] = useState("");

    const [formData, setFormData] = useState({
        displayName: user?.displayName || "",
        photoURL: user?.photoURL || "",
    });

    const onSubmit = async (e) => {
        e.preventDefault();

        try {
            await updateProfile(user, {
                displayName: formData.displayName,
                photoURL: formData.photoURL,
            });
            console.log("Profil zaktualizowany!");
        } catch (error) {
            setError("Nie udało się zaktualizować profilu: " + error.message);
        }
    };

    return (
        <div className="flex items-center justify-center h-screen bg-gray-100">
            <form onSubmit={onSubmit} className="bg-white shadow-md rounded px-8 py-6 w-96">
                <h2 className="text-2xl font-bold text-center mb-4">Twój profil</h2>

                {error && (
                    <div className="alert alert-error mb-4">
                        <span>{error}</span>
                    </div>
                )}

                {/* Wyświetlanie zdjęcia profilowego */}
                {user?.photoURL ? (
                    <div className="flex items-center justify-center mb-4">
                        <image
                            src={user.photoURL}
                            alt="Zdjęcie profilowe"
                            className="rounded-full h-24 w-24 object-cover"
                        />
                    </div>
                ) : (
                    <div className="flex items-center justify-center mb-4">
                        <div className="bg-gray-300 rounded-full h-24 w-24 flex items-center justify-center">
                            <span className="text-gray-600">Brak zdjęcia</span>
                        </div>
                    </div>
                )}

                <div className="mb-4">
                    <label>Nazwa wyświetlana:</label>
                    <input
                        type="text"
                        value={formData.displayName}
                        onChange={(e) => setFormData({ ...formData, displayName: e.target.value })}
                        className="w-full border rounded px-3 py-2"
                        placeholder="Wprowadź nazwę wyświetlaną"
                    />
                </div>
                <div className="mb-4">
                    <label>Adres email:</label>
                    <input
                        type="email"
                        value={user?.email}
                        disabled
                        className="w-full border rounded px-3 py-2 bg-gray-200"
                    />
                </div>
                <div className="mb-4">
                    <label>Adres zdjęcia profilowego:</label>
                    <input
                        type="text"
                        value={formData.photoURL}
                        onChange={(e) => setFormData({ ...formData, photoURL: e.target.value })}
                        className="w-full border rounded px-3 py-2"
                        placeholder="Wprowadź URL zdjęcia"
                    />
                </div>
                <button type="submit" className="bg-blue-500 text-white px-4 py-2 rounded">Zapisz zmiany</button>
            </form>
        </div>
    );
}
